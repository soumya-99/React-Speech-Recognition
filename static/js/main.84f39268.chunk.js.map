{"version":3,"sources":["components/Blog.js","components/Contact.js","components/Home.js","components/NewBlogPost.js","App.js","reportWebVitals.js","index.js"],"names":["Blog","Contact","Home","NewBlogPost","App","commands","command","callback","redirectPage","setRedirectUrl","transcript","useSpeechRecognition","useState","redirectUrl","SpeechRecognition","browserSupportsSpeechRecognition","redirect","includes","to","homw","blog","contact","className","id","path","component","exact","onClick","startListening","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAIeA,MAJf,WACC,OAAO,6CCGOC,MAJf,WACC,OAAO,sDCGOC,MAJf,WACC,OAAO,4CCGOC,MAJf,WACC,OAAO,mECgEOC,MAvDf,WACC,IAAMC,EAAW,CAChB,CACCC,QAAS,CAAC,UAAW,UACrBC,SAAU,SAACC,GAAD,OAAkBC,EAAeD,MAIrCE,EAAeC,+BAAqB,CAAEN,aAAtCK,WARM,EAUwBE,mBAAS,IAVjC,mBAUPC,EAVO,KAUMJ,EAVN,KAoBd,IAAKK,IAAkBC,iCAAkC,OAAO,KAEhE,IAAIC,EAAW,GAUf,OARIH,GAZU,CAAC,OAAQ,OAAQ,WAAY,WAahCI,SAASJ,KAClBG,EAAW,cAAC,IAAD,CAAUE,GAbV,CACZC,KAAM,IACNC,KAAM,QACN,gBAAiB,YACjBC,QAAS,YASsBR,MAO/B,sBAAKS,UAAU,MAAf,UACC,sBAAKC,GAAG,QAAR,UACC,cAAC,IAAD,CAAML,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,QAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,YAAT,sBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,wBAGD,eAAC,IAAD,WACC,cAAC,IAAD,CAAOM,KAAK,IAAIC,UAAWvB,EAAMwB,OAAK,IACtC,cAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWtB,IACnC,cAAC,IAAD,CAAOqB,KAAK,QAAQC,UAAWzB,IAC/B,cAAC,IAAD,CAAOwB,KAAK,WAAWC,UAAWxB,IACjCe,KAGF,oBAAGO,GAAG,aAAN,yBAAgCb,KAChC,wBAAQiB,QAASb,IAAkBc,eAAnC,uBChDYC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,UACC,cAAC,EAAD,QAGFC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.84f39268.chunk.js","sourcesContent":["function Blog() {\r\n\treturn <h1>Your Blogs</h1>\r\n}\r\n\r\nexport default Blog\r\n","function Contact() {\r\n\treturn <h1>Contact Information</h1>\r\n}\r\n\r\nexport default Contact\r\n","function Home() {\r\n\treturn <h1>Home Page</h1>\r\n}\r\n\r\nexport default Home\r\n","function NewBlogPost() {\r\n\treturn <h1>Start Adding Your New Blog Posts</h1>\r\n}\r\n\r\nexport default NewBlogPost\r\n","import { useState } from \"react\"\nimport { Route, Link, Redirect, Switch } from \"react-router-dom\"\nimport SpeechRecognition, {\n\tuseSpeechRecognition,\n} from \"react-speech-recognition\"\nimport Blog from \"./components/Blog\"\nimport Contact from \"./components/Contact\"\nimport Home from \"./components/Home\"\nimport NewBlogPost from \"./components/NewBlogPost\"\n\nfunction App() {\n\tconst commands = [\n\t\t{\n\t\t\tcommand: [\"Go to *\", \"Open *\"],\n\t\t\tcallback: (redirectPage) => setRedirectUrl(redirectPage),\n\t\t},\n\t]\n\n\tconst { transcript } = useSpeechRecognition({ commands })\n\n\tconst [redirectUrl, setRedirectUrl] = useState(\"\")\n\n\tconst pages = [\"home\", \"blog\", \"new blog\", \"contact\"]\n\tconst urls = {\n\t\thomw: \"/\",\n\t\tblog: \"/blog\",\n\t\t\"new blog post\": \"/blog/new\",\n\t\tcontact: \"/contact\",\n\t}\n\n\tif (!SpeechRecognition.browserSupportsSpeechRecognition) return null\n\n\tlet redirect = \"\"\n\n\tif (redirectUrl) {\n\t\tif (pages.includes(redirectUrl))\n\t\t\tredirect = <Redirect to={urls[redirectUrl]} />\n\t\telse {\n\t\t\t;<p>Couldn't Find Page: {redirectUrl}</p>\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div id=\"links\">\n\t\t\t\t<Link to=\"/\">Home</Link>\n\t\t\t\t<Link to=\"/blog\">Blog</Link>\n\t\t\t\t<Link to=\"/blog/new\">New Blog</Link>\n\t\t\t\t<Link to=\"/contact\">Contact</Link>\n\t\t\t</div>\n\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" component={Home} exact />\n\t\t\t\t<Route path=\"/blog/new\" component={NewBlogPost} />\n\t\t\t\t<Route path=\"/blog\" component={Blog} />\n\t\t\t\t<Route path=\"/contact\" component={Contact} />\n\t\t\t\t{redirect}\n\t\t\t</Switch>\n\n\t\t\t<p id=\"transcirpt\">Transcript: {transcript}</p>\n\t\t\t<button onClick={SpeechRecognition.startListening}>Start</button>\n\t\t</div>\n\t)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}